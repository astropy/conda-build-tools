branches:
  only:
    - master

environment:
  CONDA_INSTALL_LOCN: "C:\\conda"
  CMD_IN_ENV: cmd /E:ON /V:ON /C Obvious-CI\scripts\obvci_appveyor_python_build_env.cmd
  CONDA_BUILD_VERSION: "1.16.0"
  BUILDER_PYTHON_VERSION: "2"
  CONDA_PY: "27"  # only determines apveyor environment.
  # Python version restrictions that should apply to all builds regardless
  # of any package-specific version restrictions
  PYTHON_BUILD_RESTRICTIONS: "2.7*|>=3.4"

  BINSTAR_TOKEN:
    secure: eNFZ6uLsFUgtwjXf6n/vayT97T4sSX1nG3iv8Hfp2vWKIZJIQ6jmCeL/agYmnbiX

  matrix:
    # Unfortunately, compiler/SDK configuration for 64 bit builds depends on
    # python version. Right now conda build does not configure the SDK, and
    # the appveyor setup only sets up the SDK once, so separate by python
    # versions.
    - TARGET_ARCH: "x64"
      PYTHON_BUILD_RESTRICTIONS: "2.7*"
    - TARGET_ARCH: "x64"
      PYTHON_BUILD_RESTRICTIONS: "3.4*"
    - TARGET_ARCH: "x64"
      PYTHON_BUILD_RESTRICTIONS: "3.5*"
    # For 32 bit builds there are no compiler issues, let Obvious-CI
    # handle the matrix
    - TARGET_ARCH: "x86"
      PYTHON_BUILD_RESTRICTIONS: "2.7*|>=3.4"

# We always use a 64-bit machine, but can build x86 distributions
# with the TARGET_ARCH variable.
platform:
    - x64

install:
    - cmd: git submodule update --init --recursive
    - cmd: python Obvious-CI\bootstrap-obvious-ci-and-miniconda.py %CONDA_INSTALL_LOCN% %TARGET_ARCH% %BUILDER_PYTHON_VERSION% --without-obvci --miniconda-version latest
    - cmd: SET PATH=%CONDA_INSTALL_LOCN%;%CONDA_INSTALL_LOCN%\Scripts;%PATH%

    - cmd: conda config --set always_yes true
    - cmd: conda update --quiet conda
    - cmd: conda config --add channels astropy
    - cmd: conda install --quiet astropy anaconda-client jinja2 cython
    # These installs are needed on windows but not other platforms.
    - cmd: conda install patch psutil
    # Install custom version of conda-build for now (need to be able to pass
    # options to setup.py)
    # Instead of building from source -- which does not seem to create
    # the scripts necessary to run conda skeleton -- there is a package
    # on astropy-ci-extras.
    - cmd: conda install -c astropy-ci-extras conda-build=1.18.1
    # Install obvious-ci; run 2to3 first if the build is done on python 3.
    - cmd: cd Obvious-CI & (if %BUILDER_PYTHON_VERSION%==3 2to3 -w .) & python setup.py install & cd ..

# Skip .NET project specific build phase.
build: off

test_script:
    - "%CMD_IN_ENV% python affiliate-builder\\prepare_packages.py requirements.yml"
    - if exist recipes %CMD_IN_ENV% obvci_conda_build_dir --build-condition="python %PYTHON_BUILD_RESTRICTIONS%" recipes astropy
    # Right now fails happen immediately on trying to build.
    # - python affiliate-builder\\check_build_results.py

# Upload now occurs immediately after recipe is built.
# on_success:
